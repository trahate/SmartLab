@model SmartLab.Models.HomeModel

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<html>

<body class="row">
    <h2>Home</h2>


    @using (Ajax.BeginForm("Home", "Home", new AjaxOptions {OnSuccess = "OnSuccess", HttpMethod = "POST",UpdateTargetId= "ajaxform" }))
    {
        @Html.AntiForgeryToken()

    <div class="col-lg-pull-8 form-control">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            @Html.LabelFor(model => model.PatientID, null, new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.PatientID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div >
            @Html.LabelFor(model => model.PatientFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.PatientFName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PatientFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div >
            @Html.LabelFor(model => model.PateintLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.PateintLName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PateintLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div >
            @Html.LabelFor(model => model.PateintNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.PateintNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PateintNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div >
            @Html.LabelFor(model => model.PateintAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.PateintAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PateintAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <div >
                <hr />
                <input type="submit" value="Create" class="btn btn-default" />
            </div>

        </div>
        <div>
            <div>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default " })
            </div>
        </div>
    </div>
    }
      
    </body>
</html>

    <script>
        function OnSuccess(data) {
            alert('HTTP Status Code: ' + data.param1 + "  " + data.param2);
        }
    function OnFailure(data) {
            alert('HTTP Status Code: ' + data.param1 + '  Error Message: ' + data.param2);
        }
</script>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
